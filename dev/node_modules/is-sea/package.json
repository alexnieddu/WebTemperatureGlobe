{
  "_from": "is-sea@^0.3.1",
  "_id": "is-sea@0.3.1",
  "_inBundle": false,
  "_integrity": "sha512-Oib511JsCL71UMQ4DiItyPDsOxVhj9MNNqX2FcFvoQywrn3ADuXtwTB3UZHPJzZgFSAAblaiCoKfNhFogMEYUg==",
  "_location": "/is-sea",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "is-sea@^0.3.1",
    "name": "is-sea",
    "escapedName": "is-sea",
    "rawSpec": "^0.3.1",
    "saveSpec": null,
    "fetchSpec": "^0.3.1"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/is-sea/-/is-sea-0.3.1.tgz",
  "_shasum": "4666e6097deaae233e7c146b410ebc36217d5d26",
  "_spec": "is-sea@^0.3.1",
  "_where": "/Users/alexander/Documents/GitHub/WebTemperatureGlobe/dev",
  "author": "",
  "ava": {
    "match": [
      "!demo/**",
      "!fixtures/**"
    ]
  },
  "bugs": {
    "url": "https://github.com/simonepri/is-sea/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@geo-maps/earth-seas-10m": "^0.6.0",
    "geojson-geometries-lookup": "^0.2.0"
  },
  "deprecated": false,
  "description": "Check whether a geographic coordinate is in the sea or not on the earth.",
  "devDependencies": {
    "ava": "*",
    "browserify": "^14.5.0",
    "codecov": "^3.0.0",
    "fs-extra": "^4.0.2",
    "i18n-iso-countries": "^3.2.2",
    "leaflet": "^1.2.0",
    "nyc": "^11.3.0",
    "xo": "*"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "LICENSE",
    "README.md",
    "package.json",
    "index.js"
  ],
  "homepage": "https://github.com/simonepri/is-sea#readme",
  "keywords": [
    "is-land",
    "is-water",
    "is-waterbody",
    "land",
    "lands",
    "water",
    "waters",
    "waterbody",
    "waterbodies",
    "get",
    "earth",
    "world"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "is-sea",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/simonepri/is-sea.git"
  },
  "scripts": {
    "build-demo": "browserify demo.js > demo/index.js",
    "coverage": "nyc npm test && nyc report --reporter=text-lcov > coverage.lcov && codecov",
    "test": "xo && nyc ava --verbose"
  },
  "version": "0.3.1",
  "xo": {
    "space": true,
    "ignores": [
      "demo.js",
      "demo/**",
      "fixtures/**"
    ]
  }
}
